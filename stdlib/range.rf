(def range
    (null
        (for x &args
            (if (== 0 (in (type &x) int real))
                (raise "range: invalid arguments")
            )
        )
        (if (> (len &args) 3)
            (raise "range: invalid number of arguments")
        )
        (set start 0)
        (set step 1)
        (if (== 1 (len &args))
            (set end &args)
        else
            (set start (index 0 &args))
            (set end (index 1 &args))
            (if (== 3 (len &args))
                (set step (index 2 &args))
            )
        )
        (if (== &step 0)
            (raise "`step` cannot be zero")
        )
        (if (* (< &step 0) (< &start &end))
            (raise "when step is negative `start` must be greater than `end`")
        )
        (if (* (> &step 0) (> &start &end))
            (raise "when step is positive `start` must be less than `end`")
        )
        (set i &start)
    )
    (while (+ (* (< &i &end) (> &step 0))
              (* (> &i &end) (< &step 0))
           )
        (get i)
        (null (set i (+ &i &step)))
    )
)